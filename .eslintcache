[{"/Users/vishalranjan/Projects/hooks-demo/src/reportWebVitals.js":"1","/Users/vishalranjan/Projects/hooks-demo/src/App.js":"2","/Users/vishalranjan/Projects/hooks-demo/src/index.js":"3","/Users/vishalranjan/Projects/hooks-demo/src/login.js":"4","/Users/vishalranjan/Projects/hooks-demo/src/register.js":"5"},{"size":362,"mtime":1606723915034,"results":"6","hashOfConfig":"7"},{"size":3132,"mtime":1606903656214,"results":"8","hashOfConfig":"7"},{"size":539,"mtime":1606920831808,"results":"9","hashOfConfig":"7"},{"size":1333,"mtime":1606915578876,"results":"10","hashOfConfig":"7"},{"size":845,"mtime":1606921155152,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ut4n5w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vishalranjan/Projects/hooks-demo/src/reportWebVitals.js",[],"/Users/vishalranjan/Projects/hooks-demo/src/App.js",["22"],"/Users/vishalranjan/Projects/hooks-demo/src/index.js",[],"/Users/vishalranjan/Projects/hooks-demo/src/login.js",[],"/Users/vishalranjan/Projects/hooks-demo/src/register.js",["23","24"],{"ruleId":"25","severity":1,"message":"26","line":31,"column":17,"nodeType":"27","endLine":31,"endColumn":22},{"ruleId":"28","severity":1,"message":"29","line":10,"column":12,"nodeType":"30","messageId":"31","endLine":10,"endColumn":16},{"ruleId":"28","severity":1,"message":"32","line":10,"column":18,"nodeType":"30","messageId":"31","endLine":10,"endColumn":25},"react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used."]